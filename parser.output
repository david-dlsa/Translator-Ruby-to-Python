Terminals unused in grammar

   FLOAT
   ELSE


State 43 conflicts: 3 shift/reduce
State 44 conflicts: 3 shift/reduce
State 45 conflicts: 3 shift/reduce
State 46 conflicts: 3 shift/reduce
State 47 conflicts: 3 shift/reduce
State 48 conflicts: 8 shift/reduce
State 49 conflicts: 8 shift/reduce
State 50 conflicts: 8 shift/reduce


Grammar

    0 $accept: program $end

    1 program: LET declarations IN commands END

    2 declarations: %empty
    3             | INTEGER id_seq IDENTIFIER ';'

    4 id_seq: %empty
    5       | id_seq IDENTIFIER ','

    6 commands: %empty
    7         | commands command ';'

    8 command: SKIP
    9        | READ IDENTIFIER
   10        | WRITE exp
   11        | IDENTIFIER ASSGNOP exp
   12        | IF exp THEN commands FI
   13        | WHILE exp DO commands END

   14 exp: NUMBER
   15    | IDENTIFIER
   16    | exp '<' exp
   17    | exp '=' exp
   18    | exp '>' exp
   19    | exp '+' exp
   20    | exp '-' exp
   21    | exp '*' exp
   22    | exp '/' exp
   23    | exp '^' exp
   24    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 24
')' (41) 24
'*' (42) 21
'+' (43) 19
',' (44) 5
'-' (45) 20
'/' (47) 22
';' (59) 3 7
'<' (60) 16
'=' (61) 17
'>' (62) 18
'^' (94) 23
error (256)
LET (258) 1
INTEGER (259) 3
FLOAT (260)
IN (261) 1
SKIP (262) 8
IF (263) 12
THEN (264) 12
ELSE (265)
END (266) 1 13
WHILE (267) 13
DO (268) 13
READ (269) 9
WRITE (270) 10
NUMBER (271) 14
IDENTIFIER (272) 3 5 9 11 15
ASSGNOP (273) 11
FI (274) 12


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
declarations (34)
    on left: 2 3, on right: 1
id_seq (35)
    on left: 4 5, on right: 3 5
commands (36)
    on left: 6 7, on right: 1 7 12 13
command (37)
    on left: 8 9 10 11 12 13, on right: 7
exp (38)
    on left: 14 15 16 17 18 19 20 21 22 23 24, on right: 10 11 12 13
    16 17 18 19 20 21 22 23 24


State 0

    0 $accept: . program $end

    LET  shift, and go to state 1

    program  go to state 2


State 1

    1 program: LET . declarations IN commands END

    INTEGER  shift, and go to state 3

    $default  reduce using rule 2 (declarations)

    declarations  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    3 declarations: INTEGER . id_seq IDENTIFIER ';'

    $default  reduce using rule 4 (id_seq)

    id_seq  go to state 6


State 4

    1 program: LET declarations . IN commands END

    IN  shift, and go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    3 declarations: INTEGER id_seq . IDENTIFIER ';'
    5 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 8


State 7

    1 program: LET declarations IN . commands END

    $default  reduce using rule 6 (commands)

    commands  go to state 9


State 8

    3 declarations: INTEGER id_seq IDENTIFIER . ';'
    5 id_seq: id_seq IDENTIFIER . ','

    ';'  shift, and go to state 10
    ','  shift, and go to state 11


State 9

    1 program: LET declarations IN commands . END
    7 commands: commands . command ';'

    SKIP        shift, and go to state 12
    IF          shift, and go to state 13
    END         shift, and go to state 14
    WHILE       shift, and go to state 15
    READ        shift, and go to state 16
    WRITE       shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    command  go to state 19


State 10

    3 declarations: INTEGER id_seq IDENTIFIER ';' .

    $default  reduce using rule 3 (declarations)


State 11

    5 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce using rule 5 (id_seq)


State 12

    8 command: SKIP .

    $default  reduce using rule 8 (command)


State 13

   12 command: IF . exp THEN commands FI

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 23


State 14

    1 program: LET declarations IN commands END .

    $default  reduce using rule 1 (program)


State 15

   13 command: WHILE . exp DO commands END

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 24


State 16

    9 command: READ . IDENTIFIER

    IDENTIFIER  shift, and go to state 25


State 17

   10 command: WRITE . exp

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 26


State 18

   11 command: IDENTIFIER . ASSGNOP exp

    ASSGNOP  shift, and go to state 27


State 19

    7 commands: commands command . ';'

    ';'  shift, and go to state 28


State 20

   14 exp: NUMBER .

    $default  reduce using rule 14 (exp)


State 21

   15 exp: IDENTIFIER .

    $default  reduce using rule 15 (exp)


State 22

   24 exp: '(' . exp ')'

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 29


State 23

   12 command: IF exp . THEN commands FI
   16 exp: exp . '<' exp
   17    | exp . '=' exp
   18    | exp . '>' exp
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . '^' exp

    THEN  shift, and go to state 30
    '-'   shift, and go to state 31
    '+'   shift, and go to state 32
    '*'   shift, and go to state 33
    '/'   shift, and go to state 34
    '^'   shift, and go to state 35
    '<'   shift, and go to state 36
    '='   shift, and go to state 37
    '>'   shift, and go to state 38


State 24

   13 command: WHILE exp . DO commands END
   16 exp: exp . '<' exp
   17    | exp . '=' exp
   18    | exp . '>' exp
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . '^' exp

    DO   shift, and go to state 39
    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38


State 25

    9 command: READ IDENTIFIER .

    $default  reduce using rule 9 (command)


State 26

   10 command: WRITE exp .
   16 exp: exp . '<' exp
   17    | exp . '=' exp
   18    | exp . '>' exp
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . '^' exp

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38

    $default  reduce using rule 10 (command)


State 27

   11 command: IDENTIFIER ASSGNOP . exp

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 40


State 28

    7 commands: commands command ';' .

    $default  reduce using rule 7 (commands)


State 29

   16 exp: exp . '<' exp
   17    | exp . '=' exp
   18    | exp . '>' exp
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . '^' exp
   24    | '(' exp . ')'

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38
    ')'  shift, and go to state 41


State 30

   12 command: IF exp THEN . commands FI

    $default  reduce using rule 6 (commands)

    commands  go to state 42


State 31

   20 exp: exp '-' . exp

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 43


State 32

   19 exp: exp '+' . exp

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 44


State 33

   21 exp: exp '*' . exp

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 45


State 34

   22 exp: exp '/' . exp

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 46


State 35

   23 exp: exp '^' . exp

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 47


State 36

   16 exp: exp '<' . exp

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 48


State 37

   17 exp: exp '=' . exp

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 49


State 38

   18 exp: exp '>' . exp

    NUMBER      shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    '('         shift, and go to state 22

    exp  go to state 50


State 39

   13 command: WHILE exp DO . commands END

    $default  reduce using rule 6 (commands)

    commands  go to state 51


State 40

   11 command: IDENTIFIER ASSGNOP exp .
   16 exp: exp . '<' exp
   17    | exp . '=' exp
   18    | exp . '>' exp
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . '^' exp

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38

    $default  reduce using rule 11 (command)


State 41

   24 exp: '(' exp ')' .

    $default  reduce using rule 24 (exp)


State 42

    7 commands: commands . command ';'
   12 command: IF exp THEN commands . FI

    SKIP        shift, and go to state 12
    IF          shift, and go to state 13
    WHILE       shift, and go to state 15
    READ        shift, and go to state 16
    WRITE       shift, and go to state 17
    IDENTIFIER  shift, and go to state 18
    FI          shift, and go to state 52

    command  go to state 19


State 43

   16 exp: exp . '<' exp
   17    | exp . '=' exp
   18    | exp . '>' exp
   19    | exp . '+' exp
   20    | exp . '-' exp
   20    | exp '-' exp .
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . '^' exp

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38

    '<'       [reduce using rule 20 (exp)]
    '='       [reduce using rule 20 (exp)]
    '>'       [reduce using rule 20 (exp)]
    $default  reduce using rule 20 (exp)


State 44

   16 exp: exp . '<' exp
   17    | exp . '=' exp
   18    | exp . '>' exp
   19    | exp . '+' exp
   19    | exp '+' exp .
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . '^' exp

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38

    '<'       [reduce using rule 19 (exp)]
    '='       [reduce using rule 19 (exp)]
    '>'       [reduce using rule 19 (exp)]
    $default  reduce using rule 19 (exp)


State 45

   16 exp: exp . '<' exp
   17    | exp . '=' exp
   18    | exp . '>' exp
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   21    | exp '*' exp .
   22    | exp . '/' exp
   23    | exp . '^' exp

    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38

    '<'       [reduce using rule 21 (exp)]
    '='       [reduce using rule 21 (exp)]
    '>'       [reduce using rule 21 (exp)]
    $default  reduce using rule 21 (exp)


State 46

   16 exp: exp . '<' exp
   17    | exp . '=' exp
   18    | exp . '>' exp
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   22    | exp '/' exp .
   23    | exp . '^' exp

    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38

    '<'       [reduce using rule 22 (exp)]
    '='       [reduce using rule 22 (exp)]
    '>'       [reduce using rule 22 (exp)]
    $default  reduce using rule 22 (exp)


State 47

   16 exp: exp . '<' exp
   17    | exp . '=' exp
   18    | exp . '>' exp
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . '^' exp
   23    | exp '^' exp .

    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38

    '<'       [reduce using rule 23 (exp)]
    '='       [reduce using rule 23 (exp)]
    '>'       [reduce using rule 23 (exp)]
    $default  reduce using rule 23 (exp)


State 48

   16 exp: exp . '<' exp
   16    | exp '<' exp .
   17    | exp . '=' exp
   18    | exp . '>' exp
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . '^' exp

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38

    '-'       [reduce using rule 16 (exp)]
    '+'       [reduce using rule 16 (exp)]
    '*'       [reduce using rule 16 (exp)]
    '/'       [reduce using rule 16 (exp)]
    '^'       [reduce using rule 16 (exp)]
    '<'       [reduce using rule 16 (exp)]
    '='       [reduce using rule 16 (exp)]
    '>'       [reduce using rule 16 (exp)]
    $default  reduce using rule 16 (exp)


State 49

   16 exp: exp . '<' exp
   17    | exp . '=' exp
   17    | exp '=' exp .
   18    | exp . '>' exp
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . '^' exp

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38

    '-'       [reduce using rule 17 (exp)]
    '+'       [reduce using rule 17 (exp)]
    '*'       [reduce using rule 17 (exp)]
    '/'       [reduce using rule 17 (exp)]
    '^'       [reduce using rule 17 (exp)]
    '<'       [reduce using rule 17 (exp)]
    '='       [reduce using rule 17 (exp)]
    '>'       [reduce using rule 17 (exp)]
    $default  reduce using rule 17 (exp)


State 50

   16 exp: exp . '<' exp
   17    | exp . '=' exp
   18    | exp . '>' exp
   18    | exp '>' exp .
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . '^' exp

    '-'  shift, and go to state 31
    '+'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    '^'  shift, and go to state 35
    '<'  shift, and go to state 36
    '='  shift, and go to state 37
    '>'  shift, and go to state 38

    '-'       [reduce using rule 18 (exp)]
    '+'       [reduce using rule 18 (exp)]
    '*'       [reduce using rule 18 (exp)]
    '/'       [reduce using rule 18 (exp)]
    '^'       [reduce using rule 18 (exp)]
    '<'       [reduce using rule 18 (exp)]
    '='       [reduce using rule 18 (exp)]
    '>'       [reduce using rule 18 (exp)]
    $default  reduce using rule 18 (exp)


State 51

    7 commands: commands . command ';'
   13 command: WHILE exp DO commands . END

    SKIP        shift, and go to state 12
    IF          shift, and go to state 13
    END         shift, and go to state 53
    WHILE       shift, and go to state 15
    READ        shift, and go to state 16
    WRITE       shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    command  go to state 19


State 52

   12 command: IF exp THEN commands FI .

    $default  reduce using rule 12 (command)


State 53

   13 command: WHILE exp DO commands END .

    $default  reduce using rule 13 (command)
